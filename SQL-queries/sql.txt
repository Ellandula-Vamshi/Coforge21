
1a)  Display the first and last names of all actors from the table actor.

--> select first_name, last_name from sakila.actor;


1b)  Display the first and last name of each actor in a single column in upper case letters. Name the column Actor Name.

-->  select upper(concat(first_name, " " , last_name)) as Actor_name from sakila.actor;


2a)   You need to find the ID number, first name, and last name of an actor, of whom you know only the first name, "Joe." 
      What is one query would you use to obtain this information?

--->  select actor_id, first_name, last_name from sakila.actor where first_name like '%joe%';

      9	JOE	SWANK



2b)  Find all actors whose last name contain the letters GEN:

-->  select * from sakila.actor where last_name like '%GEN';

   14	VIVIEN	BERGEN	2006-02-15 04:34:33

2c.) Find all actors whose last names contain the letters LI. This time, order the rows by last name and first name, in that order:

--->select * from sakila.actor where last_name like '%LI' order by last_name;

2d.) Using IN, display the country_id and country columns of the following countries: Afghanistan, Bangladesh, and China:


---> SELECT * from sakila.country where country in('Afghanistan','Bangladesh','China') ;

1	Afghanistan	2006-02-15 04:44:00
12	Bangladesh	2006-02-15 04:44:00
23	China	        2006-02-15 04:44:00

3a) Add a middle_name column to the table actor. Position it between first_name and last_name. Hint: you will need to specify the data type.

--> ALTER table sakila.actor ADD column middle_name varchar(20) after first_name;

3b) You realize that some of these actors have tremendously long last names. Change the data type of the middle_name column to blobs.

---> ALTER TABLE sakila.actor MODIFY middle_name blob; 


3c) Now delete the middle_name column.

--->alter table sakila.actor drop column middle_name;

4a) List the last names of actors, as well as how many actors have that last name.

4b)  SELECT last_name,COUNT(*) AS Number_of_Actors FROM sakila.actor GROUP BY last_name HAVING count(*)>=2;

4c) update sakila.actor set first_name='HARPO' where actor_id =(select actor_id from sakila.actor where first_name='GROUCHO' and last_name='WILLIAMS');

4d) UPDATE sakila.actor SET first_name = 'GROUCHO' WHERE actor_id=172;

5a) DESCRIBE sakila.address;



6a)  select s.first_name, s.last_name, a.address, a.district from sakila.staff  s inner join sakila.address  a;

6b)SELECT payment.staff_id, staff.first_name, staff.last_name, payment.amount, payment.payment_date FROM staff INNER JOIN payment ON staff.staff_id = payment.staff_id AND payment_date LIKE '2005-08%';

6c) SELECT f.title AS 'Film Title', COUNT(fa.actor_id) AS `Number of Actors` FROM film_actor fa INNER JOIN film f ON fa.film_id= fi.film_id GROUP BY fi.title;

6d)  SELECT title, (SELECT COUNT(*) FROM inventory WHERE film.film_id = inventory.film_id) AS Number_of_Copies FROM film WHERE title = "Hunchback Impossible";

6e) SELECT c.first_name, c.last_name, sum(p.amount) AS `Total Paid`FROM customer c JOIN payment p ON c.customer_id= p.customer_id GROUP BY c.last_name;

7a)  SELECT title FROM sakila.film WHERE title LIKE 'K%' OR title LIKE 'Q%'AND title IN (SELECT title FROM film WHERE language_id = 1);

7b)  SELECT first_name, last_name FROM sakila.actor WHERE actor_id IN(Select actor_id FROM film_actor WHERE film_id IN (SELECT film_id FROM film WHERE title = 'Alone Trip'));

7c.SELECT cus.first_name, cus.last_name, cus.email FROM customer cus JOIN address a ON (cus.address_id = a.address_id)JOIN city ctyON (cty.city_id = a.city_id)JOIN country ON (country.country_id = cty.country_id) WHERE country.country= 'Canada'

7d.SELECT * FROM sakila.address;SELECT title, description FROM film WHERE film_id IN(SELECT film_id FROM film_category
    WHERE category_id IN(SELECT category_id FROM categoryWHERE name = "Family"));

7e.SELECT f.title, COUNT(rental_id) AS 'Times Rented'FROM rental r JOIN inventory i ON (r.inventory_id = i.inventory_id)
   JOIN film f ON (i.film_id = f.film_id) GROUP BY f.title ORDER BY `Times Rented` DESC;

7f.SELECT s.store_id, SUM(amount) AS 'Revenue' FROM payment p JOIN rental r ON (p.rental_id = r.rental_id)JOIN inventory iON (i.inventory_id = r.inventory_id)
   JOIN store s ON (s.store_id = i.store_id) GROUP BY s.store_id; 

7g.SELECT s.store_id, cty.city, country.country FROM store s JOIN address a ON (s.address_id = a.address_id) JOIN city cty ON (cty.city_id = a.city_id)JOIN country
   ON (country.country_id = cty.country_id);

7h.SELECT c.name AS 'Genre', SUM(p.amount) AS 'Gross' FROM category c JOIN film_category fc ON (c.category_id=fc.category_id)JOIN inventory i ON (fc.film_id=i.film_id)
   JOIN rental r ON (i.inventory_id=r.inventory_id) JOIN payment p ON (r.rental_id=p.rental_id) GROUP BY c.name ORDER BY Gross

8a.CREATE VIEW genre_revenue AS SELECT c.name AS 'Genre', SUM(p.amount) AS 'Gross' FROM category c JOIN film_category fc ON (c.category_id=fc.category_id)
    JOIN inventory i ON (fc.film_id=i.film_id)JOIN rental r ON (i.inventory_id=r.inventory_id)JOIN payment p ON (r.rental_id=p.rental_id)
    GROUP BY c.name ORDER BY Gross 

8b.SELECT * FROM genre_revenue;

8c.DROP VIEW genre_revenue;















































































BURT	TEMPLE
MERYL	ALLEN
JAYNE	SILVERSTONE
BELA	WALKEN
REESE	WEST
MARY	KEITEL
JULIA	FAWCETT
THORA	TEMPLE